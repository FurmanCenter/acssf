% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/calc_helpers.R
\name{acs_sum}
\alias{acs_sum}
\title{Sum rows within mutate with \code{\link[=acs_vars]{acs_vars()}}}
\usage{
acs_sum(..., na.rm = TRUE, .envir = parent.frame())
}
\arguments{
\item{...}{[\code{expressions}]: Expressions string(s) to format into ACS
variable codes with \code{\link[=acs_vars]{acs_vars()}} or strings corresponding to column names.
are concatenated together before formatting.}

\item{na.rm}{[\code{logical: TRUE}]: A logical value indicating whether NA values
should be stripped before the computation proceeds.}

\item{.envir}{[\code{environment: parent.frame()}]: Environment to evaluate each
expression in. Expressions are evaluated from left to right. If .x is an
environment, the expressions are evaluated in that environment and .envir
is ignored.}
}
\description{
Sum across rows within a \code{\link[dplyr:mutate]{dplyr::mutate()}} call using \code{\link[=acs_vars]{acs_vars()}} syntax to
express column inputs as expression strings.
}
\examples{

library(dplyr)

df <- tibble(
  b25070_e001 = c(1, 2, 3),
  b25070_e002 = c(3, NA, 1),
  b25070_e003 = c(1, 2, NA)
)

df \%>\%
  mutate(
    foo = acs_sum("b25070_e{1:2*}"),
    bar = acs_sum("b25070_e{1:2*}", "b25070_e003"),
    baz = acs_sum("b25070_e002", "b25070_e003")
  )

}
\seealso{
\code{\link[=acs_vars]{acs_vars()}}
}
