% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/acs_vars.R
\name{acs_drop_vars}
\alias{acs_drop_vars}
\title{Drop ACS variable columns from dataframe}
\usage{
acs_drop_vars(
  .data,
  type = c("all", "estimates", "margins", "standard errors")
)
}
\arguments{
\item{.data}{[\code{data.frame}]: A data.frame with ACS variable columns using
the format created by \code{\link[=acs_transform]{acs_transform()}}: \code{b25002_e001} for estimates and
\code{b25002_m001} for margins.}

\item{type}{[character(1)]: The type of columns to drop. Must be one of:
\code{"all"}, \code{"estimates"}, \code{"margins"}, or \code{"standard errors"}}
}
\description{
Simple wrapper of \code{\link[dplyr:select]{dplyr::select()}} to drop ACS variable columns (estimates
or margins) created by \code{\link[=acs_transform]{acs_transform()}}.
}
\details{
This function simply wraps the \code{dplyr} expression \code{select(df, -matches("pattern"))}, where the regular expression is
\code{"[bc]\\\\d{5}[a-z]*_e\\\\d{3}"} for estimates and \code{"[bc]\\\\d{5}[a-z]*_m\\\\d{3}"}
for margins.
}
\examples{

library(dplyr)

df <- tibble(
  year = 2009L,
  span = 1L,
  b25070_e001 = c(1, 2, 3),
  b25070_m001 = c(0.2, 0.5, 0.7),
  b25070_e002 = c(3, NA, 1),
  b25070_m002 = c(0.1, NA, 0.4)
)

acs_drop_vars(df, "estimates")

acs_drop_vars(df, "margins")

df \%>\%
  mutate(foo = acs_est_sum("b25070_e{1:2*}")) \%>\%
  acs_drop_vars("all")

}
